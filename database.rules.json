{
  "rules": {
    ".read": false,
    ".write": false,
    "group-metadata": {
      ".read": true,
      "$groupId": {
        // Append-only by anyone, and admins can add official groups, and edit or remove groups as well.
        ".write": "(auth != null) && (!data.exists() || root.child('moderators').hasChild(auth.uid) || data.child('createdByUserId').val() === auth.uid)",
        ".validate": "newData.hasChildren(['name','type'])",
        "id": {
          ".validate": "(newData.val() === $groupId)"
        },
        "createdByUserId": {
          ".validate": "(auth.uid === newData.val())"
        },
        "numUsers": {
          ".validate": "(newData.isNumber())"
        },
        "type": {
          ".validate": "('public' === newData.val()) || 'private' === newData.val() || ('official' === newData.val() && (root.child('moderators').hasChild(auth.uid)))"
        },
        // A list of users that may read messages from this group.
        "authorizedUsers": {
          ".write": "(auth != null) && (!data.exists() || root.child('moderators').hasChild(auth.uid) || data.hasChild(auth.uid))"
        }
      }
    },
    "group-messages": {
      "$groupId": {
        // A list of messages by group, viewable by anyone for public groups, or authorized users for private groups.
        ".read": "(root.child('group-metadata').child($groupId).child('type').val() != 'private' || root.child('group-metadata').child($groupId).child('authorizedUsers').hasChild(auth.uid))",
        "$msgId": {
          // Allow anyone to append to this list and allow admins to edit or remove.
          ".write": "(auth != null) && (data.val() === null || root.child('moderators').hasChild(auth.uid)) && (root.child('group-metadata').child($groupId).child('type').val() != 'private' || root.child('group-metadata').child($groupId).child('authorizedUsers').hasChild(auth.uid)) && (!root.child('suspensions').hasChild(auth.uid) || root.child('suspensions').child(auth.uid).val() < now)",
          ".validate": "(newData.hasChildren(['userId','name','message','timestamp']))"
        }
      }
    },
    "group-events": {
      "$groupId": {
        // A list of messages by group, viewable by anyone for public groups, or authorized users for private groups.
        ".read": "(root.child('group-metadata').child($groupId).child('type').val() != 'private' || root.child('group-metadata').child($groupId).child('authorizedUsers').hasChild(auth.uid))",
        "$eventId": {
          // Allow anyone to append to this list and allow admins to edit or remove.
          ".write": "(auth != null) && (data.val() === null || root.child('moderators').hasChild(auth.uid)) && (root.child('group-metadata').child($groupId).child('type').val() != 'private' || root.child('group-metadata').child($groupId).child('authorizedUsers').hasChild(auth.uid)) && (!root.child('suspensions').hasChild(auth.uid) || root.child('suspensions').child(auth.uid).val() < now)",
          ".validate": "(newData.hasChildren(['name','description','location','startDate','endDate','timestamp']))"
        }
      }
    },
    "group-users": {
      "$groupId": {
        ".read": "(root.child('group-metadata').child($groupId).child('type').val() != 'private' || root.child('group-metadata').child($groupId).child('authorizedUsers').hasChild(auth.uid))",
        "$userId": {
          // A list of users by group, viewable by anyone for public groups, or authorized users for private groups.
          ".write": "(auth != null) && ($userId === auth.uid || root.child('moderators').hasChild(auth.uid))",
          "$sessionId": {
            ".validate": "(!newData.exists() || newData.hasChildren(['id','name']))"
          }
        }
      }
    },
    "moderators": {
      ".read": "(auth != null)"
    },
    "suspensions": {
      ".write": "(auth != null) && (root.child('moderators').hasChild(auth.uid))",
      ".read": "(auth != null) && (root.child('moderators').hasChild(auth.uid))"
    }
  }
}
